name: 'Create Git Tags'
description: 'Creates Git Tags, can replace existing tags'
inputs:
  owner:
    description: 'Owner'
    required: false
    default: ''
  repo:
    description: 'Repository'
    required: false
    default: ''
  tag:
    description: 'Tag'
    required: true
  sha:
    description: 'SHA'
    required: true
  replace:
    description: 'Replace existing Tag'
    required: false
    default: 'false'
runs:
  using: composite
  steps:
    - name: 'Create tag ${{ inputs.tag }}'
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const owner = '${{ inputs.owner }}' || context.repo.owner;
            const repo = '${{ inputs.repo }}' || context.repo.repo;
            const tag = '${{ inputs.tag }}';
            const sha = '${{ inputs.sha }}';
            const replace = /^true$/i.test('${{ inputs.replace }}');

            const tags = await github.rest.git.listMatchingRefs({
              owner: owner,
              repo: repo,
              ref: `tags/${tag}`
            });
            console.log(tags);
            console.log(JSON.stringify(tags));
            const existing = tags.some(existingTag => existingTag === `refs/tags/${tag}`);

            if (existing) {
              if (!replace) {
                core.setFailed(`Given tag ${tag} already exists`);
                return;
              }
              
              await github.rest.git.updateRef({
                owner: owner,
                repo: repo,
                ref: `tags/${tag}`,
                sha: sha
              });
            } else{
              await github.rest.git.createRef({
                owner: owner,
                repo: repo,
                ref: `refs/tags/${tag}`,
                sha: sha
              });
            }
          } catch (err) {
            core.setFailed(`Action failed with error ${err}`);
          }
