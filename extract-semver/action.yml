name: 'Extract SemVer components'
description: 'Extracts major, minor and patch components from a semver string (optionally prefixed with refs/tags/v)'
inputs:
  semver:
    description: 'SemVer string'
    required: false
    default: ''
outputs:
  major:
    description: "SemVer major component"
    value: ${{ steps.version.outputs.major }}
  minor:
    description: "SemVer minor component"
    value: ${{ steps.version.outputs.minor }}
  patch:
    description: "SemVer patch component"
    value: ${{ steps.version.outputs.patch }}
runs:
  using: composite
  steps:
    - name: 'Extract SemVer components'
      id: version
      uses: actions/github-script@v6
      with:
        script: |
          try {
            const versionOrRef = '${{ inputs.version }}' || context.ref;
            core.info(`Input: ${versionOrRef}`);

            const refSplit = versionOrRef.split('/', 3);
            const versionWithV = refSplit[refSplit.length - 1];
            const version = versionWithV.startsWith('v') || versionWithV.startsWith('V') ? versionWithV.substring(1) : versionWithV;
            core.info(`Version string: ${version}`);

            const versionSplit = version.split('.');
            if (versionSplit.length != 3) {
              core.setFailed(`${version} is not a valid SemVer`);
              return;
            }

            const [major, minor, patch] = versionSplit;
            const semver = {
              major: major,
              minor: minor,
              patch: patch
            };

            core.info(`SemVer: ${JSON.stringify(semver, null, 2)}`);
            for (const [key, value] of Object.entries(semver)) {
              core.setOutput(key, value);
            }
          } catch (err) {
            core.setFailed(`Action failed with error ${err}`);
          }
